{"version":3,"names":[],"mappings":"","sources":["right-filter.js"],"sourcesContent":["let closeRightSidebar = document.querySelector('.closeRightSidebar');\r\n\r\nlet RightSideMenu = document.querySelector('.filter-right');\r\n\r\nlet rightFilterTrigger = document.querySelectorAll('.filter-item');\r\n\r\nrightFilterTrigger.forEach((triggerBtn)=>{\r\n  triggerBtn.addEventListener('click', (e)=>{\r\n      RightSideMenu.classList.add('active');\r\n      overflowDarken.style.opacity = \"1\";\r\n      overflowDarken.style.height = \"100rem\";\r\n      overflowDarken.style.pointerEvents  = \"initial\"; \r\n      body.style.overflowY = \"hidden\";\r\n      body.classList.add(\"active-right\")  ;  \r\n\r\n    //find data-attr on clicked element\r\n    let activeFilter = e.currentTarget.dataset.filtername; \r\n\r\n    //choose filter item with data-attributes\r\n    let filterItem = document.querySelectorAll('[data-CatalogFilterName]');\r\n\r\n    // check each of filter for contain clicked menu's attribite\r\n    //compare them and open \r\n    filterItem.forEach((fi)=> {\r\n        \r\n        let filterData = fi.dataset.catalogfiltername;\r\n        // console.log(filterData);       \r\n        \r\n        if (filterData === activeFilter){\r\n            // console.log(fi);\r\n            fi.querySelector('.mobile-main-menu').classList.add('open');\r\n        }\r\n    });\r\n  });\r\n})\r\n\r\n\r\ncloseRightSidebar.addEventListener('click', ()=>{\r\n  RightSideMenu.classList.remove('active');\r\n  overflowDarken.style.opacity = \"0\";\r\n  overflowDarken.style.height = \"0\";\r\n  overflowDarken.style.pointerEvents  = \"none\";\r\n  mobileItem.forEach((mi)=>{\r\n        mi.classList.remove('open');    \r\n   }) ;\r\n   body.style.overflowY = \"auto\";\r\n   body.classList.remove(\"active-right\")  ;  \r\n\r\n});\r\n\r\noverflowDarken.addEventListener('click', ()=>{\r\n    RightSideMenu.classList.remove('active');\r\n    overflowDarken.style.opacity = \"0\";\r\n    overflowDarken.style.height = \"0\";\r\n    overflowDarken.style.pointerEvents  = \"none\";\r\n    mobileItem.forEach((mi)=>{\r\n        mi.classList.remove('open');    \r\n   }) ;\r\n   body.style.overflowY = \"auto\";\r\n   body.classList.remove(\"active-right\")  ;  \r\n  \r\n  });\r\n\r\n\r\nvar stepsSlider = document.getElementById('steps-slider');\r\nvar input0 = document.getElementById('input-with-keypress-0');\r\nvar input1 = document.getElementById('input-with-keypress-1');\r\nvar inputs = [input0, input1];\r\n\r\nnoUiSlider.create(stepsSlider, {\r\n    start: [20, 50000],\r\n    connect: true,\r\n    tooltips: false,\r\n    range: {\r\n        'min': [0],\r\n        'max': 10000\r\n    }\r\n});\r\n\r\nstepsSlider.noUiSlider.on('update', function (values, handle) {\r\n    inputs[handle].value = values[handle];\r\n});\r\n\r\n\r\n// Listen to keydown events on the input field.\r\ninputs.forEach(function (input, handle) {\r\n\r\n  input.addEventListener('change', function () {\r\n      stepsSlider.noUiSlider.setHandle(handle, this.value);\r\n  });\r\n\r\n  input.addEventListener('keydown', function (e) {\r\n\r\n      let values = stepsSlider.noUiSlider.get();\r\n      var value = Number(values[handle]);\r\n\r\n      // [[handle0_down, handle0_up], [handle1_down, handle1_up]]\r\n      var steps = stepsSlider.noUiSlider.steps();\r\n\r\n      // [down, up]\r\n      var step = steps[handle];\r\n\r\n      var position;\r\n\r\n      // 13 is enter,\r\n      // 38 is key up,\r\n      // 40 is key down.\r\n      switch (e.which) {\r\n\r\n          case 13:\r\n              stepsSlider.noUiSlider.setHandle(handle, this.value);\r\n              break;\r\n\r\n          case 38:\r\n\r\n              // Get step to go increase slider value (up)\r\n              position = step[1];\r\n\r\n              // false = no step is set\r\n              if (position === false) {\r\n                  position = 1;\r\n              }\r\n\r\n              // null = edge of slider\r\n              if (position !== null) {\r\n                  stepsSlider.noUiSlider.setHandle(handle, value + position);\r\n              }\r\n\r\n              break;\r\n\r\n          case 40:\r\n\r\n              position = step[0];\r\n\r\n              if (position === false) {\r\n                  position = 1;\r\n              }\r\n\r\n              if (position !== null) {\r\n                  stepsSlider.noUiSlider.setHandle(handle, value - position);\r\n              }\r\n\r\n              break;\r\n      }\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\nlet pageBtn = document.querySelectorAll(\".page-btn\");\r\n\r\npageBtn.forEach((el)=>{\r\n  el.addEventListener(\"click\", (event)=> {\r\n\r\n    pageBtn.forEach((elem)=>{\r\n      elem.classList.remove('active');\r\n    });  \r\n\r\n        if(!event.target.classList.contains('active')){\r\n          \r\n          el.classList.add('active');\r\n\r\n        } \r\n\r\n    });\r\n})\r\n\r\n\r\n/* When the user clicks on the button,\r\ntoggle between hiding and showing the dropdown content */\r\nfunction dropdown() {\r\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\r\n  }\r\n  \r\n  // Close the dropdown menu if the user clicks outside of it\r\n  window.onclick = function(event) {\r\n    if (!event.target.matches('.dropbtn')) {\r\n      var dropdowns = document.getElementsByClassName(\"dropdown-content\");\r\n      var i;\r\n      for (i = 0; i < dropdowns.length; i++) {\r\n        var openDropdown = dropdowns[i];\r\n        if (openDropdown.classList.contains('show')) {\r\n          openDropdown.classList.remove('show');\r\n        }\r\n      }\r\n    }\r\n  }"],"file":"right-filter.js"}